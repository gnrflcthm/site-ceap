// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum AccountType {
  CEAP_SUPER_ADMIN
  CEAP_ADMIN
  MS_ADMIN
  MS_USER
}

enum FileClassification {
  CHRISTIAN_FORMATION
  BASIC_EDUCATION
  HIGHER_EDUCATION
  TECHINICAL_VOCATION_EDUCATION
  ALS_SPED
  PROGRAMS
  NATIONAL_CONVENTION
  ADVOCACY
  RESEARCH
  GENERAL_CEAP
  COCOPEA_PEAC
  INTERNATIONAL_LINKAGES
  OTHERS
}

enum FileType {
  PDF
  IMAGE
  VIDEO
  DOCUMENTS
}

enum FileAccessibility {
  PUBLIC
  PRIVATE
  HIDDEN
}

enum RequestStatus {
  FOR_REVIEW
  APPROVED
}

model User {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  authId         String        @unique
  username       String        @unique
  firstName      String
  middleName     String
  lastName       String
  email          String
  mobileNumber   String?
  accountType    AccountType
  memberSchool   MemberSchool? @relation(fields: [memberSchoolId], references: [id])
  memberSchoolId String?       @db.ObjectId
  Resource       Resource[]
}

// Fix Naming Inconsistencies
model UserRegistration {
  id             String        @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String
  middleName     String
  lastName       String
  birthday       DateTime
  emailAddress   String
  mobileNumber   String?
  registeredAt   DateTime?     @default(now())
  schoolId       String?       @unique
  organization   MemberSchool? @relation(fields: [memberSchoolId], references: [id])
  memberSchoolId String?       @db.ObjectId
}

model MemberSchool {
  id            String             @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  address       String
  region        String
  users         User[]
  registrations UserRegistration[]
}

model Resource {
  id             String             @id @default(auto()) @map("_id") @db.ObjectId
  gid            String             @unique
  filename       String
  filepath       String
  dateAdded      DateTime
  classification FileClassification
  fileType       FileType
  contentType    String
  accessibility  FileAccessibility?
  status         RequestStatus?
  uploadedBy     User?              @relation(fields: [uploaderId], references: [id])
  uploaderId     String?            @db.ObjectId
}
